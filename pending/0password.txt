Dado un string S, hallar el mayor substring T de S que es prefijo, sufijo, y aparece dentro del string.
	
S: [fix]pre[fix]puf[fix]
i: 012345678901234
z: 000000400001300
p:  00000123401123
z_Approach: Hacer la z-function al string y llevar el mayor valor que se ha obtenido en las posiciones anteriores, si llegamos a una posición tal que: z[i] == len(S)-i, o sea es prefijo y sufijo y además se cumple que el mayor valor de z obtenido anteriormente es >= que len(S)-i, entonces esta es la posición que buscamos. 
 
kmp_Approach: Hacemos el preffix-function a el string-entero, porque para hacer análisis hace falta el valor de p[] en la última posición del array, recorremos el array desde la primera posición hasta la penúltima:

